@startuml

class GameEngineGraphical {
void run()
}


class CanadaGame {
int niveauActuel
int score
void evolve(Cmd userCmd)
boolean isFinished()
}

class CanadaPainter {
void draw(BufferedImage image)
void addToDrawQueue(GraphicsComponent graphics)
void clearDrawQueue()
}

class CanadaController{
Cmd getCommand()
}

class CanadaPhysics{
void updatePhysics(double dt)
void addCollider(ColliderComponent collider)
void addToUpdate(MovementComponent movementComponent)
}

enum Cmd {
LEFT,RIGHT,UP,DOWN,IDLE
}

class World {
ArrayList<GameObject> buildWorld(String source)
}

class GameObject {
int posX, posY
void update(double dt)
void addComponent(Component component)
}

class GameObjectFactory {

}

abstract class Component{
void update(double dt)
}

class PlayerInputComponent{
void update(double dt)
}

class MovementComponent{
float velocity
void update(double dt)
}

abstract class ColliderComponent{
void update(double dt)
}

abstract class GraphicsComponent{
Shape shape
Color color
void update(double dt)
}

class RectangleComponent{
float width, height
void update(double dt)
}

class CircleComponent{
float radius
void update(double dt)
}

GameEngineGraphical -- "1"CanadaGame
GameEngineGraphical -- "1"CanadaPainter
GameEngineGraphical -- "1"CanadaController 
GameEngineGraphical -- "1"CanadaPhysics

CanadaGame -- "*"GameObject
CanadaGame --"1" CanadaPainter
World --"1" CanadaPainter

GameObject "1"--"*"Component
GameObjectFactory -- "1"GameObjectFactory

Component <|-- GraphicsComponent
Component <|-- PlayerInputComponent
Component <|-- MovementComponent
Component <|-- ColliderComponent

GraphicsComponent <|-- RectangleComponent
GraphicsComponent <|-- CircleComponent

CanadaController "1"-- PlayerInputComponent
CanadaPainter "1"--"*" GraphicsComponent 

CanadaPhysics "1"-"*"MovementComponent
CanadaPhysics "1"-"*"ColliderComponent


@enduml
